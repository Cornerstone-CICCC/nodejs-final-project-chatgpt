---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <main class="container" id="container">
    <div class="top-half">
      <button id="logout">Logout</button>
      <div class="face-container">
        <img class="face" src="openjan.svg" alt="face" />
      </div>
    </div>
    <ul class="friends-list">
      <!-- <li class="friend-item">
        <a href="/chat">
          <img
            src="https://unavatar.io/github/alanawuwad"
            alt="Alan"
            class="friend-avatar"
          />
          <div class="friend-info">
            <span class="friend-name">Alan</span>
            <span class="last-message"
              >Hello Lorem ipsum dolor sit amet consectetur, adipisicing elit.
              Doloribus, omnis.</span
            >
          </div>
          <span class="last-date">12:45 PM</span>
        </a>
      </li> -->
    </ul>
  </main>
</Layout>

<script type="module">
  // Check Cookie and Get User Id
  const checkAuth = async () => {
    const res = await fetch(`http://localhost:3500/user/check-cookie`, {
      method: "GET",
      credentials: "include",
    });
    if (!res.ok) {
      window.location.href = "/";
      return;
    }
    const data = await res.json();
    console.log("Get User Id", data);
    return data.userId;
  };

  // Get User Friends
  const getFriends = async (userId) => {
    if (!userId) {
      userId = await checkAuth();
    }
    const res = await fetch(`http://localhost:3500/friend/${userId}`);
    const data = await res.json();
    console.log("Get Friends", data);
    return data;
  };

  getFriends();

  // Get User Rooms
  const getRooms = async (userId) => {
    const res = await fetch(`http://localhost:3500/room/private/${userId}`);
    const data = await res.json();
    console.log(`Get Private Rooms for ${userId}`, data);
    return data;
  };

  // Render Friends
  const renderFriendList = async () => {
    const userId = await checkAuth();
    const friends = await getFriends(userId);
    const rooms = await getRooms(userId);

    const list = document.querySelector(".friends-list");

    for (const friend of friends) {
      const matchedRoom = rooms.find(
        (room) => room.name.includes(userId) && room.name.includes(friend._id)
      );

      if (!matchedRoom) return;
      console.log('matched', matchedRoom);

      const listItem = document.createElement("li");
      listItem.classList.add("friend-item");
      listItem.innerHTML = `
      <a href="/${matchedRoom._id}">
        <img
          src="https://unavatar.io/github/${friend.username || "default"}"
          alt="${friend.firstName}"
          class="friend-avatar"
        />
        <div class="friend-info">
          <span class="friend-name">${friend.firstName}</span>
          <span class="last-message">
            Hello Lorem ipsum dolor sit amet consectetur, adipisicing elit.
          </span>
        </div>
        <span class="last-date">12:45 PM</span>
      </a>
    `;
      list.appendChild(listItem);
    }
  };

  renderFriendList();

  // const getUsers = async () => {
  //   const res = await fetch(`http://localhost:3500/user`);
  //   const data = await res.json();
  //   console.log(data);
  // };

  // getUsers()

  const addFriend = async () => {
    const res = await fetch(`http://localhost:3500/user`);
  };
  // Render User Friends

  // LOG OUT
  const logout = document.querySelector("#logout");

  logout.addEventListener("click", async () => {
    console.log("Click");

    const res = await fetch(`http://localhost:3500/user/logout`, {
      method: "GET",
      credentials: "include",
    });
    if (!res.ok) {
      console.error("Something went wrong");
      return;
    }
    window.location.href = "/";
  });
</script>

<style is:global>
  body {
    min-height: 100vh;
  }

  .container {
    margin: auto;
    padding-bottom: 10px;
    max-width: 450px;
    height: 100%;
    background: #fff;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    scroll-behavior: smooth;
    /* overflow-y: scroll; */
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .top-half {
    background-color: var(--main-color);
    width: 100%;
    display: flex;
    justify-content: center;
    justify-items: center;
    align-items: flex-end;
    position: relative;
  }

  .top-half::after {
    content: "";
    width: calc(50% - 44px);
    height: 10px;
    position: absolute;
    background-color: white;
    left: 0;
    bottom: 0;
    border-top-right-radius: 15px 12px;
    z-index: 20;
  }
  .top-half::before {
    content: "";
    width: calc(50% - 44px);
    height: 10px;
    position: absolute;
    background-color: white;
    right: 0;
    bottom: 0;
    border-top-left-radius: 15px 12px;
    z-index: 20;
  }

  .face-container {
    position: relative;
    width: 70px;
    height: 70px;
    top: 30%;
    border-radius: 50%;
    outline: solid 11px var(--main-color);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10;
    /* overflow: hidden; */
  }

  #logout {
    position: absolute;
    z-index: 20;
    background-color: white;
    right: 5px;
    top: 5px;
    cursor: pointer;
  }

  .face {
    border-radius: 50%;
    object-fit: contain;
    object-position: 1px 18px;
    width: 100%;
    height: 100%;
    background-color: #fff;
    box-shadow: inset 0 0 9px var(--main-color);
  }

  .friends-list::-webkit-scrollbar {
    display: none;
  }

  .friends-list {
    width: 100%;
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 12px;
    overflow-y: scroll;
  }

  .friend-item {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 8px;
    /* background-color: #f9f9f9; */
    transition: background-color 0.2s;
    cursor: pointer;
    position: relative;
    justify-content: flex-start;
  }

  .friend-item a {
    width: 100%;
    display: flex;
    align-items: center;
    gap: 12px;
    /* background-color: #f9f9f9; */
    position: relative;
    justify-content: flex-start;
  }

  .friend-item:hover {
    background-color: #ececec;
  }

  .friend-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
  }

  .friend-name {
    font-weight: 500;
    font-size: 1rem;
  }

  .friend-info {
    display: flex;
    flex-direction: column;
  }

  .last-message {
    color: gray;
    font-size: 0.9rem;
    margin-top: 2px;
    max-width: 250px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  .last-date {
    margin-left: auto;
    font-size: 0.75rem;
    color: gray;
    align-self: flex-start;
  }
</style>
